export interface MapLike<K, V> {
    get(key: K): V | undefined;
    has(key: K): boolean;
    set(key: K, value: V): void;
}
/**
 * Get a value from a map-like object if present, or create the value if missing.
 * @param map map-like object
 * @param key key
 * @param create produce a value if missing
 * @returns existing or newly-created value
 */
export declare function mapGetOrCreate<K, V>(map: MapLike<K, V>, key: K, create: () => V): {
    value: V;
    created: boolean;
};
export declare function mapMustGet<K, V>(map: MapLike<K, V>, key: K): V;
